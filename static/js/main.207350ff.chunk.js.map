{"version":3,"sources":["store/token.js","store/loading.js","api/index.js","store/todos.js","store/index.js","components/loader/index.js","components/loader/Loader.jsx","components/signUp/index.js","components/signUp/SignUp.jsx","components/signIn/index.js","components/signIn/SignIn.jsx","components/todos/TodoItem.jsx","components/todos/index.js","components/todos/TodoList.jsx","components/profile/ProfileSearch.jsx","components/profile/ProfileAdd.jsx","components/profile/ProfileError.jsx","components/profile/ProfileHeader.jsx","components/profile/index.js","components/profile/Profile.jsx","App.jsx","index.js"],"names":["setToken","token","type","initialState","tokenReducer","state","action","setIsLoading","value","setHasError","isLoading","hasError","loadingReducer","URL","prefix","setTodos","todos","setTotalItems","setUpdateTodos","updated_at","setQueryStore","query","totalItems","updateTodos","todosReducer","getToken","selectorsToken","getIsLoading","selectorsLoading","loading","getHasError","getTodos","selectorsTodos","getTotalItems","getUpdateTodos","getQueryStore","rootReducer","combineReducers","persistedState","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","setItem","stringify","getState","Loader","className","SignUp","history","dispatch","useDispatch","useSelector","selectors","useState","first_name","last_name","email","username","password","user","setUser","useEffect","errorInput","classnames","errorEmail","handleChange","event","key","target","id","prev","onSubmit","preventDefault","axios","method","url","data","fetchRegister","then","push","catch","htmlFor","onChange","to","SignIn","errorText","login","setLogin","setPassword","fetchToken","response","error","TodoItem","todo","isEditing","setIsEditing","title","newTitle","setNewTitle","body","newBody","setNewBody","status","newStatus","setNewStatus","handleEdit","newTodo","checked","headers","fetchEditTodo","Date","now","onClick","TodoList","map","ProfileSearch","setQuery","a","trim","placeholder","ProfileAdd","setNewTodo","fetchAddTodo","ProfileError","ProfileHeader","Profile","queryStore","currentPage","setCurrentPage","res","results","count","searchTodos","page","fetchTodos","activePage","totalItemsCount","itemsCountPerPage","pageNumber","innerClass","linkClass","activeLinkClass","prevPageText","nextPageText","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.207350ff.chunk.js","sourcesContent":["const SET_TOKEN = 'SET_TOKEN';\n\nexport const setToken = token => ({ type: SET_TOKEN, token });\n\nexport const getToken = state => state.token;\n\nconst initialState = {\n  token: '',\n};\n\nconst tokenReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_TOKEN:\n      return {\n        ...state,\n        token: action.token,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default tokenReducer;","const SET_IS_LOADING = 'SET_IS_LOADING';\nconst SET_HAS_ERROR = 'SET_HAS_ERROR';\n\nexport const setIsLoading = value => ({ type: SET_IS_LOADING, value });\nexport const setHasError = value => ({ type: SET_HAS_ERROR, value });\n\nexport const getIsLoading = state => state.isLoading;\nexport const getHasError = state => state.hasError;\n\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n}\n\nconst loadingReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.value,\n      };\n    case SET_HAS_ERROR:\n      return {\n        ...state,\n        hasError: action.value,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default loadingReducer;","import axios from 'axios';\n\nexport const BASE_URL = 'http://ec2-18-219-246-237.us-east-2.compute.amazonaws.com:7778';\nexport const URL = 'http://ec2-18-219-246-237.us-east-2.compute.amazonaws.com:7778/api/v1';\nexport const prefix = 'https://cors-anywhere.herokuapp.com';\n\nexport const fetchEditTodo = (newTodo, id, token) => {\n  const res = axios({ \n    method: 'PATCH',\n    url: `${prefix}/${URL}/todo/${id}/`,\n    headers: {\n      'Authorization': 'Token ' + token,\n    },\n    data: newTodo,\n  });\n\n  return res;\n};\n\nexport const fetchAddTodo = (todo, token) => {\n  const res = axios({ \n    method: 'POST',\n    url: `${prefix}/${URL}/todo/`,\n    headers: {\n      'Authorization': 'Token ' + token,\n    },\n    data: todo,\n  });\n\n  return res;\n}\n\nexport const fetchToken = (username, password) => {\n  const res = axios({ \n    method: 'POST',\n    url: `${prefix}/${BASE_URL}/api-token-auth/`,\n    data: { username, password }\n  });\n\n  return res;\n}\n\nexport const fetchRegister = (user) => {\n  const res = axios({\n    method: 'POST',\n    url: `${prefix}/${URL}/users/`,\n    data: user,\n  });\n\n  return res;\n}","import axios from 'axios';\nimport { setIsLoading, setHasError } from './loading';\nimport { prefix, URL } from '../api';\n\nconst SET_TODOS = 'SET_TOODS';\nconst SET_TOTAL_ITEMS = 'SET_TOTAL_ITEMS';\nconst SET_UPDATE_TODOS = 'SET_UPDATE_TODOS';\nconst SET_QUERY_STORE = 'SET_QUERY_STORE';\n\nexport const setTodos = todos => ({ type: SET_TODOS, todos });\nexport const setTotalItems = value => ({ type: SET_TOTAL_ITEMS, value });\nexport const setUpdateTodos = updated_at => ({ type: SET_UPDATE_TODOS, updated_at });\nexport const setQueryStore = query => ({ type: SET_QUERY_STORE, query });\n\nexport const fetchTodos = (page, token) => {\n  return async (dispatch) => {\n    dispatch(setIsLoading(true));\n\n    try {\n      const res = await axios({ \n        method: 'GET',\n        url: `${prefix}/${URL}/todo/?page=${page}`,\n        headers: {\n          'Authorization': 'Token ' + token,\n        },\n      });\n      dispatch(setTodos(res.data.results));\n      dispatch(setTotalItems(res.data.count));\n    } catch(error) {\n      dispatch(setHasError(true));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n}\n\nexport const searchTodos = (query, token) => {\n  return async (dispatch) => {\n    dispatch(setIsLoading(true));\n\n    try {\n      const res = await axios({ \n        method: 'GET',\n        url: `${prefix}/${URL}/todo/?search=${query}`,\n        headers: {\n          'Authorization': 'Token ' + token,\n        },\n      });\n      dispatch(setTodos(res.data.results));\n      dispatch(setTotalItems(res.data.count));\n    } catch(error) {\n      dispatch(setHasError(true));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n}\n\nexport const getTodos = state => state.todos;\nexport const getTotalItems = state => state.totalItems;\nexport const getUpdateTodos = state => state.updateTodos;\nexport const getQueryStore = state => state.query;\n\nconst initialState = {\n  todos: [],\n  query: '',\n  totalItems: 0,\n  updateTodos: 0,\n}\n\nconst todosReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n      };\n    case SET_TOTAL_ITEMS:\n      return {\n        ...state,\n        totalItems: action.value,\n      };\n    case SET_UPDATE_TODOS:\n      return {\n        ...state,\n        updateTodos: action.updated_at,\n      };\n    case SET_QUERY_STORE:\n      return {\n        ...state,\n        query: action.query, \n      };\n    default:\n      return state;\n  }\n}\n\nexport default todosReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport tokenReducer from './token';\nimport loadingReducer from './loading';\nimport todosReducer from './todos';\nimport * as selectorsToken from './token';\nimport * as selectorsLoading from './loading';\nimport * as selectorsTodos from './todos';\n\nexport const getToken = state => selectorsToken.getToken(state.token);\nexport const getIsLoading = state => selectorsLoading.getIsLoading(state.loading);\nexport const getHasError = state => selectorsLoading.getHasError(state.loading);\nexport const getTodos = state => selectorsTodos.getTodos(state.todos);\nexport const getTotalItems = state => selectorsTodos.getTotalItems(state.todos);\nexport const getUpdateTodos = state => selectorsTodos.getUpdateTodos(state.todos);\nexport const getQueryStore = state => selectorsTodos.getQueryStore(state.todos);\n\nconst rootReducer = combineReducers({\n  token: tokenReducer,\n  loading: loadingReducer,\n  todos: todosReducer,\n});\n\nconst persistedState = JSON.parse(localStorage.getItem('reduxState')) || {};\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(()=>{\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nexport default store;","import { Loader } from './Loader';\n\nexport default Loader;","import React from 'react';\n\nexport const Loader = () => (\n  <div className='lds-container'>\n    <div className='lds-body'>\n      <div className='lds-roller'>\n        <div></div><div>\n          </div><div></div>\n            <div></div><div></div>\n          <div></div><div>\n        </div><div></div>\n      </div>\n    </div>\n  </div>\n)","import { SignUp } from './SignUp';\n\nexport default SignUp;","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport Loader from '../loader';\nimport { fetchRegister } from '../../api'; \nimport { setHasError, setIsLoading } from '../../store/loading';\nimport * as selectors from '../../store';\n\nexport const SignUp = ({ history }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectors.getIsLoading);\n  const hasError = useSelector(selectors.getHasError);\n\n  const [user, setUser] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    username: '',\n    password: '',\n  });\n\n  useEffect(() => {\n    dispatch(setIsLoading(false));\n    dispatch(setHasError(false));\n  }, []);\n\n  const errorInput = classnames({ 'error-input': hasError })\n  const errorEmail = classnames({ 'error-input': user.email && hasError })\n\n  const handleChange = (event) => {\n    const key = event.target.id;\n    const value = event.target.value;\n    dispatch(setHasError(false));\n    setUser(prev => ({ ...prev, [key]: value }));\n  }\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n    dispatch(setIsLoading(true));\n\n    if ('username' in user && 'password' in user) {\n      const res = fetchRegister(user);\n      res.then(() => {\n          history.push('/');\n        })\n        .catch(() => {\n          dispatch(setHasError(true));\n        });\n    } else {\n      dispatch(setHasError(true));\n    }\n    \n    dispatch(setIsLoading(false));\n  }\n\n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      <form \n        className='form form-sign' \n        onSubmit={handleRegister}\n      >\n        <h2 className='form__heading'>Registration Form</h2>\n        <div className='form__row'>\n          <div className=\"form__item\">\n            <label htmlFor=\"first_name\" className='form__label'>\n              First Name\n            </label>\n            <input \n              value={user.first_name}\n              type=\"text\" \n              id='first_name' \n              className='form__input'\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form__item\">\n            <label htmlFor=\"last_name\" className='form__label'>\n              Last Name\n            </label>\n            <input \n              value={user.last_name}\n              type=\"text\" \n              id='last_name' \n              className='form__input'\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className='form__row'>\n          \n          <div className=\"form__item form__email\">\n            <label htmlFor=\"email\" className='form__label'>\n              Email\n              </label>\n            <input \n              value={user.email}\n              type=\"text\" \n              id='email' \n              className={`form__input form__input--email ${errorEmail}`}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className='form__row'>\n          <div className=\"form__item\">\n            <label \n              htmlFor=\"username\" \n              className='form__label required'\n            >\n              Username\n            </label>\n            <input \n              value={user.username}\n              type=\"text\" \n              id='username' \n              className={`form__input ${errorInput}`}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form__item\">\n            <label \n              htmlFor=\"password\" \n              className='form__label required'\n            >\n              Password\n            </label>\n            <input \n              value={user.password}\n              type=\"password\" \n              id='password' \n              className={`form__input ${errorInput}`}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"form__buttons\">\n          <button type=\"submit\" className='button button__pink'>Sign Up</button>\n          <p className='form__or'>OR</p>\n          <NavLink to='/'><button className=\"button form__button\">Sign In</button></NavLink>\n        </div>\n      </form>\n    </div>\n  )\n}\n\n","import { SignIn } from './SignIn';\n\nexport default SignIn;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport Loader from '../loader';\nimport { fetchToken } from '../../api';\nimport { setHasError, setIsLoading } from '../../store/loading';\nimport { setToken } from '../../store/token';\nimport * as selectors from '../../store';\n\nexport const SignIn = ({ history }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectors.getIsLoading);\n  const hasError = useSelector(selectors.getHasError);\n  const token = useSelector(selectors.getToken);\n\n  const errorInput = classnames({ 'error-input': hasError })\n  const errorText = classnames({ 'error-text': hasError })\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    dispatch(setIsLoading(false));\n    dispatch(setHasError(false));\n  }, []);\n\n  const handleLogin = (event) => {\n    dispatch(setIsLoading(true));\n\n    event.preventDefault();\n\n    if(!login || !password) {\n      dispatch(setHasError(true))\n      dispatch(setIsLoading(false));\n      return;\n    }\n\n    const res = fetchToken(login, password)\n\n    res.then(response => {\n      dispatch(setToken(response.data.token));\n      history.push('/profile');\n    })\n    .catch(error => {\n      dispatch(setHasError(true));\n      setPassword('');\n      dispatch(setToken(''));\n    });\n\n    dispatch(setIsLoading(false));\n  };\n\n  if(token !== '') {  \n    history.push('/profile');\n  };\n\n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      <form className=\"form form-sign\" onSubmit={handleLogin}>\n        <h2 className=\"form__heading\">Sign In</h2>\n        <div className='form__row'>\n          <div className=\"form__item\">\n            <label htmlFor=\"username\" className={`form__label ${errorText}`}>\n              Username\n            </label>\n            <input \n              value={login}\n              type=\"text\" \n              id='username' \n              className={`form__input ${errorInput}`}\n              onChange={event => {\n                setLogin(event.target.value);\n                dispatch(setHasError(false));\n              }}\n            />\n          </div>\n          <div className=\"form__item\">\n            <label htmlFor=\"password\" className={`form__label ${errorText}`}>\n              Password\n            </label>\n            <input \n              value={password}\n              type=\"password\" \n              id='password' \n              className={`form__input ${errorInput}`}\n              onChange={event => {\n                setPassword(event.target.value);\n                dispatch(setHasError(false));\n              }}\n            />\n          </div>\n        </div>\n        \n        <div className=\"form__buttons\">\n          <button type=\"submit\" className=\"button form__button\">Sign In</button>\n          <p className='form__or'>OR</p>\n          <NavLink to='/sign-up'><button className=\"button button__pink\">Sign Up</button></NavLink>\n        </div>\n      </form>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport { fetchEditTodo } from '../../api';\nimport { setIsLoading, setHasError } from '../../store/loading';\nimport { setUpdateTodos } from '../../store/todos';\nimport * as selectors from '../../store';\n\nexport const TodoItem = ({ todo }) => {\n  const dispatch = useDispatch();\n  const token = useSelector(selectors.getToken);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(todo.title);\n  const [newBody, setNewBody] = useState(todo.body);\n  const [newStatus, setNewStatus] = useState(todo.status);\n\n  const handleEdit = (newTodo, checked) => {\n    dispatch(setIsLoading(true));\n\n    try {\n      const res = fetchEditTodo(newTodo, todo.id, token);\n\n      res.then(() => {\n        dispatch(setUpdateTodos(+Date.now()));\n        if(checked) {\n          setNewStatus(!newStatus)\n        }\n      })\n    } catch(error) {\n      dispatch(setHasError(true));\n    }\n\n    dispatch(setIsLoading(false));\n    setIsEditing(false);\n  }\n\n  return (\n    <li\n      className={classnames({ \n        'todo__item': true,\n        'completed': todo.status\n      })}\n    >\n      <div className='round'>\n        <input \n          type='checkbox' \n          id={todo.id} \n          checked={newStatus}\n          onChange={() => handleEdit({ status: !newStatus }, true)}\n        />\n        <label htmlFor={todo.id}></label>\n      </div>\n      {isEditing ? (\n        <>\n          <div className='todo__edit'>\n            <input \n              type=\"text\" \n              className='todo__input-edit'\n              value={newTitle}\n              onChange={event => setNewTitle(event.target.value)}\n            />\n            <input \n              type=\"text\" \n              className='todo__input-edit todo__input-edit--descr'\n              value={newBody}\n              onChange={event => setNewBody(event.target.value)}\n            />\n            <button \n              className='button button__edit button__edit--green'\n              onClick={() => {\n                handleEdit({ title: newTitle, body: newBody });\n              }}\n            >\n              &#10004;\n            </button>\n          </div>\n          <button \n            className='button button__edit'\n            onClick={() => {\n              setIsEditing(false);\n              setNewTitle(todo.title);\n              setNewBody(todo.body);\n            }}\n          >\n            &#10005;\n          </button>\n        </>\n      ) : (\n        <>\n          <p className='todo__title'>{todo.title}</p>\n          <p className='todo__description'>{todo.body}</p>\n          <button \n            className='button button__edit'\n            onClick={() => {\n              setIsEditing(true);\n            }}\n          >\n            edit\n          </button>\n        </>\n      )}\n    </li>\n  );\n};","import { TodoList } from './TodoList';\n\nexport default TodoList;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../store';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = () => {\n  const todos = useSelector(selectors.getTodos);\n\n  return (\n    <ul className='todo__list'>\n      {todos.map(todo => (\n      <TodoItem \n        key={todo.id} \n        todo={todo}\n      />\n      ))}\n    </ul>\n  );\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setQueryStore } from '../../store/todos';\n\nexport const ProfileSearch = () => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n\n  const handleSearch = (event, a) => {\n    event.preventDefault();\n\n    if(a === '') {\n      dispatch(setQueryStore(''));\n    } else {\n      dispatch(setQueryStore(query.trim()));\n      setQuery(query.trim());\n    }\n  }\n\n  return (\n    <>\n      <form \n        className=\"profile__search\" \n        onSubmit={handleSearch}\n      >\n        <input \n          value={query}\n          type=\"text\" \n          className=\"form__input\" \n          placeholder=\"Enter the title of todo\"\n          onChange={event => setQuery(event.target.value)}\n        />\n        <button \n          className=\"button\"\n          type='submit'\n        >\n          Search\n        </button>\n      </form>\n      <p className='profile__notice'>If you want to see all todos, search with an empty string.</p>\n    </>\n  )\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAddTodo } from '../../api';\nimport { setUpdateTodos } from '../../store/todos'; \nimport { setIsLoading, setHasError } from '../../store/loading';\nimport * as selectors from '../../store';\n\nexport const ProfileAdd = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(selectors.getToken);\n\n  const [newTodo, setNewTodo] = useState({\n    id: '',\n    title: '',\n    body: '',\n  });\n\n  const handleChange = (event) => {\n    const key = event.target.id;\n    const value = event.target.value;\n\n    setNewTodo(prev => ({ ...prev, [key]: value }));\n  }\n  \n  const handleAdd = () => {\n    setNewTodo(prev => ({ ...prev, id: +new Date() }));\n    dispatch(setIsLoading(true));\n\n    try {\n      const res = fetchAddTodo(newTodo, token);\n\n      res.then(() => {\n        dispatch(setUpdateTodos(+Date.now()));\n      });\n      setNewTodo({ id: '', title: '', body: '' });\n    } catch(error) {\n      dispatch(setHasError(true));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n\n  return (\n    <div className=\"profile__add\">\n      <input \n        value={newTodo.title}\n        id='title'\n        type=\"text\" \n        className=\"form__input form__input-add\" \n        placeholder=\"Title\"\n        onChange={handleChange}\n      />\n      <textarea \n        value={newTodo.body}\n        id='body'\n        className=\"form__input form__textarea\" \n        placeholder=\"Description\"\n        onChange={handleChange}\n      ></textarea>\n      <button \n        className=\"button\"\n        onClick={handleAdd}\n      >\n        Add Todo\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nexport const ProfileError = () => (\n  <div className=\"container\">\n    <div className=\"profile\">\n      <p className='profile__error'>\n        Please, <Link to='/#'>login</Link> to use this page \n      </p>\n    </div>\n  </div>\n)","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setToken } from '../../store/token';\n\nexport const ProfileHeader = ({ history }) => {\n  const dispatch = useDispatch();\n  const handleSignOut = () => {\n    dispatch(setToken(''));\n    history.push('/');\n  }\n\n  return (\n    <div className=\"profile__header\">\n      <h1 className='profile__heading'>TODOS</h1>\n      <button \n        className=\"profile__button\"\n        onClick={handleSignOut}\n      >\n        Sign Out\n      </button>\n    </div>\n  );\n};","import { Profile } from './Profile';\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Pagination from 'react-js-pagination';\nimport TodoList from '../todos';\nimport Loader from '../loader';\nimport { ProfileSearch } from './ProfileSearch';\nimport { ProfileAdd } from './ProfileAdd';\nimport { ProfileError } from './ProfileError';\nimport { ProfileHeader } from './ProfileHeader';\nimport { fetchTodos, searchTodos } from '../../store/todos';\nimport { setHasError } from '../../store/loading';\nimport * as selectors from '../../store';\n\nexport const Profile = ({ history }) => {\n  const dispatch = useDispatch();\n  const token = useSelector(selectors.getToken);\n  const hasError = useSelector(selectors.getHasError);\n  const isLoading = useSelector(selectors.getIsLoading);\n  const totalItems = useSelector(selectors.getTotalItems);\n  const updateTodos = useSelector(selectors.getUpdateTodos);\n  const queryStore = useSelector(selectors.getQueryStore);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    if(queryStore) {\n      dispatch(searchTodos(queryStore, token));\n    } else if(token) {\n      dispatch(fetchTodos(currentPage, token));\n    } else {\n      dispatch(setHasError(true));\n    }\n  }, [currentPage, updateTodos, token, queryStore]);\n\n  if(hasError) {\n    return (\n      <ProfileError />\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      <div className=\"profile\">\n        <ProfileHeader \n          history={history}\n        />\n        <ProfileAdd />\n        <hr className='profile__hr'/>\n        <ProfileSearch />\n        {totalItems ? (\n          <>\n            <TodoList />\n            <div>\n              <Pagination\n                activePage={currentPage}\n                totalItemsCount={totalItems}\n                itemsCountPerPage={10}\n                onChange={(pageNumber) => setCurrentPage(pageNumber)}\n                innerClass=\"pages\"\n                linkClass=\"pages__link\"\n                activeLinkClass=\"pages__link--active\"\n                prevPageText=\"&#8249;\"\n                nextPageText=\"&#8250;\"\n              />\n            </div>\n          </>\n        ) : (\n          <p className='profile__notodos'>No todos found</p>\n        )}\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SignUp from './components/signUp';\nimport SignIn from './components/signIn';\nimport Profile from './components/profile';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path='/sign-up' exact component={SignUp} />\n      <Route path='/' exact component={SignIn} />\n      <Route path='/Profile' component={Profile} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './assets/css/main.css'\n\nReactDOM.render(\n  <Router >\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}